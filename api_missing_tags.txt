This file contains api tag missing in the project with the explanations for each case.
See https://github.com/ZettaScaleLabs/zenoh-tests/tree/tagging/api_matrix for details.

tags{api.attachment.is_empty(TODO)}
tags{api.attachment.len(TODO)}

tags{api.buffer.slices(TODO)}
To be implemented

tags{api.delete.encoding.set(N/A)}
tags{api.delete.attachment.set(N/A)}
Purposedly not added: in Rust they exists only because DeleteBuilder is an alias for PutBuilder, but actually they are not used for delete operations.

tags{api.downsampling_item_conf(TODO)}
tags{api.downsampling_rule_conf(TODO)}

tags{api.request.accept_replies.set(TODO)}
tags{api.request.allowed_destination.set(TODO)}

tags{api.ke_tree(TODO)}
tags{api.ke_tree.create(TODO)}
tags{api.ke_tree.create.with_token(TODO)}

tags{api.keyexpr.create.autocanonize(TODO)}
tags{api.keyexpr.get_nonwild_prefix(TODO)}
tags{api.keyexpr.is_wild(TODO)}

tags{api.keyexpr.iter(N/A)}
Could be useful, but it's not an essential part of the API.

tags{api.keyexpr.relation_to(TODO)}
tags{api.keyexpr.strip_prefix(TODO)}

tags{api.liveliness.request.channel(N/A)}
tags{api.liveliness.request.timeout.set(TODO)}
tags{api.liveliness.subscriber.channel(N/A)}

tags{api.matching.listener.channel(N/A)}
tags{api.matching.listener.undeclare(TODO)}

tags{api.config.entry.adminspace.permissions.read(TODO)}
tags{api.config.entry.adminspace.permissions.write(TODO)}
tags{api.config.entry.aggregation.publishers(TODO)}
tags{api.config.entry.aggregation.subscribers(TODO)}
tags{api.config.entry.downsampling(TODO)}
tags{api.config.entry.id(TODO)}
tags{api.config.entry.metadata(TODO)}
tags{api.config.entry.plugins(TODO)}
tags{api.config.entry.plugins_search_dirs(TODO)}
tags{api.config.entry.queries_default_timeout(TODO)}
tags{api.config.entry.routing.peer.mode(TODO)}
tags{api.config.entry.routing.router.peers_failover_brokering(TODO)}
tags{api.config.entry.scouting.gossip.autoconnect(TODO)}
tags{api.config.entry.scouting.gossip.enabled(TODO)}
tags{api.config.entry.scouting.multicast.autoconnect(TODO)}
tags{api.config.entry.scouting.multicast.listen(TODO)}
tags{api.config.entry.scouting.timeout(TODO)}
tags{api.config.entry.timestamping(TODO)}
tags{api.config.entry.timestamping.drop_future_timestamp(TODO)}
tags{api.config.entry.transport.auth.pubkey.algorithm(TODO)}
tags{api.config.entry.transport.auth.pubkey.key_size(TODO)}
tags{api.config.entry.transport.auth.pubkey.private_key_file(TODO)}
tags{api.config.entry.transport.auth.pubkey.private_key_pem(TODO)}
tags{api.config.entry.transport.auth.pubkey.public_key_file(TODO)}
tags{api.config.entry.transport.auth.pubkey.public_key_pem(TODO)}
tags{api.config.entry.transport.auth.usrpwd.dictionary_file(TODO)}
tags{api.config.entry.transport.link.protocols(TODO)}
tags{api.config.entry.transport.link.rx(TODO)}
tags{api.config.entry.transport.link.rx.buffer_size(TODO)}
tags{api.config.entry.transport.link.rx.defragmentation_buffer_size(TODO)}
tags{api.config.entry.transport.link.tls.client_auth(TODO)}
tags{api.config.entry.transport.link.tls.client_certificate(TODO)}
tags{api.config.entry.transport.link.tls.client_certificate_base64(TODO)}
tags{api.config.entry.transport.link.tls.client_private_key(TODO)}
tags{api.config.entry.transport.link.tls.client_private_key_base64(TODO)}
tags{api.config.entry.transport.link.tls.root_ca_certificate(TODO)}
tags{api.config.entry.transport.link.tls.root_ca_certificate_base64(TODO)}
tags{api.config.entry.transport.link.tls.server_certificate(TODO)}
tags{api.config.entry.transport.link.tls.server_certificate_base64(TODO)}
tags{api.config.entry.transport.link.tls.server_name_verification(TODO)}
tags{api.config.entry.transport.link.tls.server_private_key(TODO)}
tags{api.config.entry.transport.link.tls.server_private_key_base64(TODO)}
tags{api.config.entry.transport.link.tx.keep_alive(TODO)}
tags{api.config.entry.transport.link.tx.lease(TODO)}
tags{api.config.entry.transport.link.tx.mtu(TODO)}
tags{api.config.entry.transport.link.tx.queue.backoff(TODO)}
tags{api.config.entry.transport.link.tx.queue.size.background(TODO)}
tags{api.config.entry.transport.link.tx.queue.size.control(TODO)}
tags{api.config.entry.transport.link.tx.queue.size.data(TODO)}
tags{api.config.entry.transport.link.tx.queue.size.data_high(TODO)}
tags{api.config.entry.transport.link.tx.queue.size.data_low(TODO)}
tags{api.config.entry.transport.link.tx.queue.size.interactive_high(TODO)}
tags{api.config.entry.transport.link.tx.queue.size.interactive_low(TODO)}
tags{api.config.entry.transport.link.tx.queue.size.real_time(TODO)}
tags{api.config.entry.transport.link.tx.sequence_number_resolution(TODO)}
tags{api.config.entry.transport.link.tx.threads(TODO)}
tags{api.config.entry.transport.link.unixpipe.path(TODO)}
tags{api.config.entry.transport.multicast.compression.enabled(TODO)}
tags{api.config.entry.transport.multicast.join_interval(TODO)}
tags{api.config.entry.transport.multicast.max_sessions(TODO)}
tags{api.config.entry.transport.multicast.qos.enabled(TODO)}
tags{api.config.entry.transport.shared_memory.enabled(TODO)}
tags{api.config.entry.transport.unicast.accept_pending(TODO)}
tags{api.config.entry.transport.unicast.compression(TODO)}
tags{api.config.entry.transport.unicast.compression.enabled(TODO)}
tags{api.config.entry.transport.unicast.lowlatency(TODO)}
tags{api.config.entry.transport.unicast.max_links(TODO)}
tags{api.config.entry.transport.unicast.max_sessions(TODO)}
tags{api.config.entry.transport.unicast.open_timeout(TODO)}
tags{api.config.entry.transport.unicast.qos(TODO)}
tags{api.config.entry.transport.unicast.qos.enabled(TODO)}

tags{api.options.downsampling_flow(TODO)}
tags{api.options.downsampling_flow.egress(TODO)}
tags{api.options.downsampling_flow.ingress(TODO)}
Used in config only, need to be added if corresponding config option is added.

